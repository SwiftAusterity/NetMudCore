@using NetMudCore.Data.Combat

@model FightingArt

<h4>Power Balance: <span id="powerBalance"></span></h4>
<span style="font-style: italic;">Must <= 0 to <a href="/Features/Help?searchTerm=Crafting%20-%20Fighting%20Art" target="_blank">qualify</a>.</span>
<hr />

<h4>Details</h4>
<div class="form-group row">
    @Html.EditorFor(m => m.Name)
    @Html.EditorFor(m => m.Setup)
    @Html.EditorFor(m => m.Recovery)
    @Html.EditorFor(m => m.Impact)
    @Html.EditorFor(m => m.Armor)
    @Html.EditorFor(m => m.Readiness)
</div>

<h4>Requirements</h4>
<div class="form-group row">
    @Html.EditorFor(m => m.Aim)
    @Html.EditorFor(m => m.DistanceRange)
    @Html.EditorFor(m => m.RekkaKey)
    @Html.EditorFor(m => m.RekkaPosition)
</div>

<h4>Costs/Results</h4>
<div class="form-group row">
    @Html.EditorFor(m => m.Health)
    @Html.EditorFor(m => m.Stamina)
    @Html.EditorFor(m => m.DistanceChange)
    @Html.EditorFor(m => m.PositionResult)
</div>

<h4>Action Text</h4>
<div>
    <span style="font-style: italic; margin: 5px;"><span style="font-weight: 700;">None:</span> You {art name} {victim}.</span>
    <span style="font-style: italic; margin: 5px;"><span style="font-weight: 700;">All:</span> You {verb} {subject} and {predicate} {victim}.</span>
</div>
<div>
    <span style="font-style: italic; margin: 5px;"><span style="font-weight: 700;">Verb:</span> You {verb} {victim}.</span>
    <span style="font-style: italic; margin: 5px;"><span style="font-weight: 700;">Subject:</span> You {art name} {subject} {victim}.</span>
    <span style="font-style: italic; margin: 5px;"><span style="font-weight: 700;">Predicate:</span> You {art name} and {predicate} {victim}.</span>
</div>
<div>
    <span style="font-style: italic; margin: 5px;"><span style="font-weight: 700;">V & S:</span> You {verb} {subject} {victim}.</span>
    <span style="font-style: italic; margin: 5px;"><span style="font-weight: 700;">V & P:</span> You {verb} and {predicate} {victim}.</span>
    <span style="font-style: italic; margin: 5px;"><span style="font-weight: 700;">S & P:</span> You {art name} {subject} and {predicate} {victim}.</span>
</div>
<div class="form-group row">
    @Html.EditorFor(m => m.ActionVerb)
    @Html.EditorFor(m => m.ActionSubject)
    @Html.EditorFor(m => m.ActionPredicate)
</div>

<h4>Quality Changes</h4>
<div class="form-group row">
    @Html.EditorFor(m => m.ResultQuality)
    @Html.EditorFor(m => m.QualityValue)
    @Html.EditorFor(m => m.AdditiveQuality)
</div>

<h4>Actor Criteria</h4>
@Html.EditorFor(m => m.ActorCriteria)
<h4>Victim Criteria</h4>
@Html.EditorFor(m => m.VictimCriteria)

<h4>Help Text</h4>
@Html.EditorFor(m => m.HelpText)

<script type="text/javascript">
    $(document).ready(function () {
        CalculatePowerBalance();

        $('input').blur(function () { CalculatePowerBalance() });
        $('select').blur(function () { CalculatePowerBalance() });
    });

    function CalculatePowerBalance() {
        // negatives- (setup x 3 + recovery x 2.5) + rekka? = 10 + (health cost x 5) + (stam cost x 2.5)
        var setup = parseInt($('input[name="DataObject.Setup"]').val()) * 3;
        var recovery = parseInt($('input[name="DataObject.Recovery"]').val()) * 2.5; // DataObject.Recovery
        var rekka = $('input[name="DataObject.RekkaPosition"]').val() !== '-1' ? 10 : 0; // DataObject.RekkaPosition
        var staminaCost = parseInt($('input[name="DataObject.Stamina.Actor"]').val()) * 5; // DataObject.Stamina.Actor
        var healthCost = parseInt($('input[name="DataObject.Health.Actor"]').val()) * 2.5; // DataObject.Health.Actor

        // positives - (readiness * 10) (impact x 5) (health drain x 10) (stam drain x 5) (position result * 10) (quality value x2)+ (armor * 4)
        var armor = parseInt($('input[name="DataObject.Armor"]').val()) * 4;
        var readinessState = parseInt($('select[name="DataObject.Readiness"]').val()) * 10; // DataObject.Stagger
        var impact = parseInt($('input[name="DataObject.Impact"]').val()) * 5; // DataObject.Impact
        var healthDrain = parseInt($('input[name="DataObject.Health.Victim"]').val()) * 10; // DataObject.Health.Victim
        var staminaDrain = parseInt($('input[name="DataObject.Stamina.Victim"]').val()) * 5; // DataObject.Stamina.Victim
        var positionResult = parseInt($('select[name="DataObject.PositionResult.Victim"]').val()) * 10; // DataObject.PositionResult.Victim
        var qualityValue = parseInt($('input[name="DataObject.QualityValue"]').val()) * 2;

        var powerBalance = readinessState + impact + positionResult + qualityValue + staminaDrain + healthDrain + armor
            - setup - recovery - rekka - staminaCost - healthCost;

        $('#powerBalance').html(powerBalance);

        return powerBalance;
    }
</script>
