@using NetMudCore.DataStructure.Linguistic
@using NetMudCore.Data.Linguistic

@model BaseLanguageMembers
@{
    var archivedTemplate = ViewData["ArchiveTemplate"] as Language;
}
<div class="form-group row">
    @Html.EditorFor(m => m.ArticleDeterminant, new { archivedValue = archivedTemplate?.BaseWords.ArticleDeterminant ?? "" })
    @Html.EditorFor(m => m.ArticleNonDeterminant, new { archivedValue = archivedTemplate?.BaseWords.ArticleNonDeterminant ?? "" })
    @Html.EditorFor(m => m.Conjunction, new { archivedValue = archivedTemplate?.BaseWords.Conjunction ?? "" })
    @Html.EditorFor(m => m.VerbExistentialPlural, new { archivedValue = archivedTemplate?.BaseWords.VerbExistentialPlural ?? "" })
    @Html.EditorFor(m => m.VerbExistentialSingular, new { archivedValue = archivedTemplate?.BaseWords.VerbExistentialSingular ?? "" })
    @Html.EditorFor(m => m.NeutralPronounFirstPersonPossessive, new { archivedValue = archivedTemplate?.BaseWords.NeutralPronounFirstPersonPossessive ?? "" })
    @Html.EditorFor(m => m.NeutralPronounFirstPersonSingular, new { archivedValue = archivedTemplate?.BaseWords.NeutralPronounFirstPersonSingular ?? "" })
    @Html.EditorFor(m => m.NeutralPronounSecondPersonPlural, new { archivedValue = archivedTemplate?.BaseWords.NeutralPronounSecondPersonPlural ?? "" })
    @Html.EditorFor(m => m.NeutralPronounSecondPersonPossessive, new { archivedValue = archivedTemplate?.BaseWords.NeutralPronounSecondPersonPossessive ?? "" })
    @Html.EditorFor(m => m.NeutralPronounSecondPersonSingular, new { archivedValue = archivedTemplate?.BaseWords.NeutralPronounSecondPersonSingular ?? "" })
    @Html.EditorFor(m => m.PrepositionInside, new { archivedValue = archivedTemplate?.BaseWords.PrepositionInside ?? "" })
    @Html.EditorFor(m => m.PrepositionNear, new { archivedValue = archivedTemplate?.BaseWords.PrepositionNear ?? "" })
    @Html.EditorFor(m => m.PrepositionOn, new { archivedValue = archivedTemplate?.BaseWords.PrepositionOn ?? "" })
    @Html.EditorFor(m => m.PrepositionAround, new { archivedValue = archivedTemplate?.BaseWords.PrepositionAround ?? "" })
    @Html.EditorFor(m => m.PrepositionAttached, new { archivedValue = archivedTemplate?.BaseWords.PrepositionAttached ?? "" })
    @Html.EditorFor(m => m.PrepositionFar, new { archivedValue = archivedTemplate?.BaseWords.PrepositionFar ?? "" })
    @Html.EditorFor(m => m.PrepositionOf, new { archivedValue = archivedTemplate?.BaseWords.PrepositionOf ?? "" })
</div>