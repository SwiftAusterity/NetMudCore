@using NetMudCore.DataStructure.Architectural

@model HashSet<Coordinate>

@{
    var i = 0;
    var htmlAttributes = new Dictionary<string, object>() { { "name", "AffectPattern" }, { "id", "AffectPattern" }, { "onclick", "javascript: toggleColor(this);" } };
    var htmlAttributesDisabled = new Dictionary<string, object>() { { "name", "AffectPattern" }, { "id", "AffectPattern" }, { "disabled", "true" } };
}

<div class="clearfix"></div>
<div class="affectRangeContainer">
    @for (i = 10; i >= 0; i--)
    {
        <div class="row">
            @for (var n = 0; n <= 10; n++)
            {
                var isChecked = n == 5 && i == 5 || Model.Any(coord => coord.X == n && coord.Y == i);
                var stringBool = isChecked ? "1" : "0";
                var colorString = n == 5 && i == 5 ? "background-color: palevioletred;"
                                : isChecked ? "background-color: darkseagreen;"
                                : "";

                <div class="affectRangeNode" style="@colorString">
                    @Html.Hidden(string.Format("Y[{0}]", i), stringBool)

                    @Html.CheckBox("", isChecked, htmlAttributes)
                </div>
            }
        </div>
    }
</div>
<script type="text/javascript">
    function toggleColor(me) {
        $me = $(me);

        if (me.checked) {
            $me.siblings().val('1');
            $me.parent().attr('style', 'background-color: darkseagreen;');
        } else {
            $me.siblings().val('0');
            $me.parent().attr('style', '');
        }
    }
</script>
