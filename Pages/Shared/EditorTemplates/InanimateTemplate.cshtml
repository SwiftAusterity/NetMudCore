@using NetMudCore.Data.Inanimate

@model InanimateTemplate

@{ 
    var archivedTemplate = ViewData["ArchiveTemplate"] as InanimateTemplate;
}

<h4>Details</h4>
<div class="form-group row">
    @Html.EditorFor(m => m.Name, new { archivedValue = archivedTemplate?.Name ?? "" })
    @Html.EditorFor(m => m.AccumulationCap, new { archivedValue = archivedTemplate?.AccumulationCap.ToString() ?? "" })
</div>

@Html.EditorFor(m => m.Qualities)

<h4>Item Containers</h4>
@Html.EditorFor(m => m.InanimateContainers)

<h4>NPC Containers</h4>
@Html.EditorFor(m => m.MobileContainers)

@Html.EditorFor(m => m.Model)

<h3>Crafting Blueprint</h3>
<hr />
<div class="form-group row">
    @Html.EditorFor(m => m.Produces, new { archivedValue = archivedTemplate?.Produces.ToString() ?? "" })
</div>

<h4>Components</h4>
@Html.EditorFor(m => m.Components, new { validItems = ViewData["ValidInanimateTemplates"] })

<h4>Skill Requirements</h4>
@Html.EditorFor(m => m.SkillRequirements)
