@using NetMudCore.Data.Architectural.ActorBase

@model Race

@{
    var archivedTemplate = ViewData["ArchiveTemplate"] as Race;
}

<h4>Details</h4>
<div class="form-group row">
    @Html.EditorFor(m => m.Name, new { archivedValue = archivedTemplate?.Name ?? "" })
    @Html.EditorFor(m => m.CollectiveNoun, new { archivedValue = archivedTemplate?.CollectiveNoun ?? "" })
    @Html.EditorFor(m => m.StartingLocation, new { validItems = ViewData["ValidZones"], archivedValue = archivedTemplate?.StartingLocation?.Name ?? "" })
    @Html.EditorFor(m => m.EmergencyLocation, new { validItems = ViewData["ValidZones"], archivedValue = archivedTemplate?.EmergencyLocation?.Name ?? "" })
</div>

<div class="form-group row">
    @Html.EditorFor(m => m.HelpText, new { archivedValue = archivedTemplate?.HelpText?.ToString() ?? "" })
</div>

<h4>Biology</h4>
<div class="form-group row">
    @Html.EditorFor(m => m.VisionRange, new { archivedValue = archivedTemplate?.VisionRange.ToString() ?? "" })
    @Html.EditorFor(m => m.TemperatureTolerance, new { archivedValue = archivedTemplate?.TemperatureTolerance.ToString() ?? "" })
    @Html.EditorFor(m => m.Breathes, new { archivedValue = archivedTemplate?.Breathes.ToString() ?? "" })
    @Html.EditorFor(m => m.DietaryNeeds, new { archivedValue = archivedTemplate?.DietaryNeeds.ToString() ?? "" })
    @Html.EditorFor(m => m.TeethType, new { archivedValue = archivedTemplate?.TeethType.ToString() ?? "" })
</div>

<h4>Anatomy</h4>
<div class="form-group row">
    @Html.EditorFor(m => m.SanguinaryMaterial, new { validItems = ViewData["ValidMaterials"], archivedValue = archivedTemplate?.SanguinaryMaterial?.Name ?? "" })
    @Html.EditorFor(m => m.Head, new { validItems = ViewData["ValidItems"], archivedValue = archivedTemplate?.Head?.Name ?? "" })
    @Html.EditorFor(m => m.Torso, new { validItems = ViewData["ValidItems"], archivedValue = archivedTemplate?.Torso?.Name ?? "" })
    @Html.EditorFor(m => m.Arms, new { validItems = ViewData["ValidItems"], archivedValue = archivedTemplate?.Arms.ToString() ?? "" })
    @Html.EditorFor(m => m.Legs, new { validItems = ViewData["ValidItems"], archivedValue = archivedTemplate?.Legs.ToString() ?? "" })
</div>

<h4>Extra Body Parts</h4>
@Html.EditorFor(m => m.BodyParts, new { validItems = ViewData["ValidItems"] })

<h4>Death Config</h4>
<div class="form-group row">
    @Html.EditorFor(m => m.DeathNoticeBody, new { archivedValue = archivedTemplate?.DeathNoticeBody?.ToString() ?? "" })
</div>

<h4>On-Death Quality Changes</h4>
@Html.EditorFor(m => m.DeathQualityChanges)
