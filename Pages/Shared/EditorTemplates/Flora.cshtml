@using NetMudCore.Data.NaturalResource

@model Flora

@{
    var archivedTemplate = ViewData["ArchiveTemplate"] as Flora;
}

<h4>Details</h4>
<div class="form-group row">
    @Html.EditorFor(m => m.Name, new { archivedValue = archivedTemplate?.Name ?? "" })
    @Html.EditorFor(m => m.SunlightPreference, new { archivedValue = archivedTemplate?.SunlightPreference.ToString() ?? "" })
    @Html.EditorFor(m => m.Coniferous, new { archivedValue = archivedTemplate?.Coniferous.ToString() ?? "" })
</div>
<div class="form-group row">
    @Html.EditorFor(m => m.HelpText, new { archivedValue = archivedTemplate?.HelpText.ToString() ?? "" })
</div>

<h4>Anatomy</h4>
<div class="form-group row">
    @Html.EditorFor(m => m.Wood, new { validItems = ViewData["ValidMaterials"], archivedValue = archivedTemplate?.Wood?.Name ?? "" })
    @Html.EditorFor(m => m.Leaf, new { validItems = ViewData["ValidItems"], archivedValue = archivedTemplate?.Leaf?.Name ?? "" })
    @Html.EditorFor(m => m.Flower, new { validItems = ViewData["ValidItems"], archivedValue = archivedTemplate?.Flower?.Name ?? "" })
    @Html.EditorFor(m => m.Fruit, new { validItems = ViewData["ValidItems"], archivedValue = archivedTemplate?.Fruit?.Name ?? "" })
    @Html.EditorFor(m => m.Seed, new { validItems = ViewData["ValidItems"], archivedValue = archivedTemplate?.Seed?.Name ?? "" })
</div>

<h4>Spawning Criterion</h4>
<div class="form-group row">
    @Html.EditorFor(m => m.Rarity, new { archivedValue = archivedTemplate?.Rarity.ToString() ?? "" })
    @Html.EditorFor(m => m.AmountMultiplier, new { archivedValue = archivedTemplate?.AmountMultiplier.ToString() ?? "" })
    @Html.EditorFor(m => m.PuissanceVariance, new { archivedValue = archivedTemplate?.PuissanceVariance.ToString() ?? "" })
</div>
<div class="form-group row">
    @Html.EditorFor(m => m.TemperatureRange, new { archivedValue = archivedTemplate?.TemperatureRange.ToString() ?? "" })
    @Html.EditorFor(m => m.HumidityRange, new { archivedValue = archivedTemplate?.HumidityRange.ToString() ?? "" })
    @Html.EditorFor(m => m.ElevationRange, new { archivedValue = archivedTemplate?.ElevationRange.ToString() ?? "" })
</div>

<h4>Occurs In</h4>
@Html.EditorFor(m => m.OccursIn)

